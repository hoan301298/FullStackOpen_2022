{"version":3,"sources":["services/base.js","Person.js","App.js","index.js"],"names":["baseUrl","allActions","getAll","axios","get","then","response","data","create","newObject","post","terminate","Object","delete","id","update","put","Person","person","name","number","onClick","window","confirm","formServices","catch","error","console","log","Unsuscessfully","unsuscessMessage","className","Suscessfully","suscessMessage","Filter","newTerm","handles","value","onChange","event","Form","addPerson","news","onSubmit","required","type","ShowPersons","persons","map","App","props","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewTerm","setSuscessMessage","setUnsuscessMessage","useEffect","target","filteredPersons","filter","toLowerCase","includes","preventDefault","some","per","identical","setTimeout","length","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14ecc447.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst terminate = (Object) => {\r\n    return axios.delete(`${baseUrl}/${Object.id}`, Object).then(response => response.data)\r\n}\r\n\r\nconst update = (Object) => {\r\n    return axios.put(`${baseUrl}/${Object.id}`, Object).then(response => response.data)\r\n}\r\n\r\nconst allActions = {getAll,  create, terminate, update}\r\n\r\nexport default allActions","import {React} from 'react'\r\nimport formServices from './services/base'\r\n\r\nconst Person = ({ person }) => {\r\n  const confirmDelete = () => {\r\n    formServices.terminate(person)\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <li>{person.name} {person.number}\r\n    <button onClick={() => window.confirm(`Delete ${person.name} ?`) ? confirmDelete() : <></>}>\r\n      Delete\r\n    </button>\r\n    </li>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Person","import React, { useState, useEffect } from 'react'\nimport formServices from './services/base'\nimport Person from './Person'\nimport './index.css'\n\nconst Unsuscessfully = ({unsuscessMessage}) => {\n  if(unsuscessMessage === null)\n  {\n    return null\n  }\n  return (\n      <div className=\"error\">\n        {unsuscessMessage}\n      </div>\n    )\n}\n\nconst Suscessfully = ({suscessMessage}) => {\n  if(suscessMessage === null) {\n    return null\n  }\n  else\n  {\n    return (\n      <p className=\"suscess\">{suscessMessage}</p>\n    )\n  }\n}\n\nconst Filter = ({newTerm, handles}) => {\n  return (\n    <p>Filter with: <input value={newTerm} onChange={(event) => handles[2](event)} /></p>\n  )\n}\n\nconst Form = ({addPerson, handles, news}) => {\n  return (\n    <form onSubmit={addPerson}>\n        <div>\n          Name: <input value={news[0]} onChange={handles[0]} required/> <br />\n          Number: <input value={news[1]} onChange={handles[1]} required />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n  )\n}\n\nconst ShowPersons = ({persons}) => {\n  return (\n    persons.map(person => <Person key={person.name} person={person} />)\n  )\n}\n\nconst App = (props) => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newTerm, setNewTerm ] = useState('')\n  const [ suscessMessage, setSuscessMessage ] = useState(null)\n  const [ unsuscessMessage, setUnsuscessMessage ] = useState(null)\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleTermChange = (event) => {\n    setNewTerm(event.target.value)\n  }\n\n  useEffect(() => {\n    formServices.getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const addPerson= (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n    if(persons.some(per => per.name === newName))\n    {\n      if(window.confirm(`${person.name} is already in the phonebook. Do you want to update the number ?`))\n      {\n        const identical = persons.filter(per => per.name === newName)\n        person.id = identical[0].id  \n        formServices.update(person)\n        .catch(error => {\n          console.log(error)\n          setUnsuscessMessage(`${person.name} has already been deleted`)\n          setTimeout(() => {\n            setUnsuscessMessage(null)\n          }, 5000)\n      })\n      }\n    }\n    if(person.name.length < 3 || person.number.length < 8)\n    {\n      formServices.create(person)\n      .catch(error => {\n        console.log(error.response.data)\n        setUnsuscessMessage(error.response.data)\n        setTimeout(() => {setUnsuscessMessage(null)}, 5000)\n      })\n    }\n    else\n    {\n      formServices.create(person)\n      .then(setSuscessMessage(`${person.name} added to the phone book`))\n      .then(setTimeout(() => {setSuscessMessage(null)}, 5000))\n      .then(setPersons(persons.concat(person)))\n    }\n      \n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handles = [handleNameChange, handleNumberChange, handleTermChange]\n  const news = [newName, newNumber, newTerm]\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(newTerm.toLowerCase()))\n\n  return (\n    <div>\n      <Suscessfully suscessMessage={suscessMessage}/>\n      <Unsuscessfully unsuscessMessage={unsuscessMessage}/>\n      <h1>Phonebook</h1>\n      <Filter newTerm={newTerm} handles={handles}/>\n      <h1>Add a new</h1>\n      <Form addPerson={addPerson} handles={handles} news={news}/>\n      <h1>Numbers</h1>\n      <ShowPersons persons={filteredPersons} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, \ndocument.getElementById('root'))"],"sourceRoot":""}